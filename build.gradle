buildscript {
    ext.kotlin_version = '1.2.21'

    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.moowork.gradle:gradle-node-plugin:1.2.0'
    }
}

group 'chicagoedt'
version '0.1-ALPHA'

apply plugin: 'kotlin2js'
apply plugin: 'com.moowork.node'

sourceSets {
    main.kotlin.srcDirs += 'src/'
    test.kotlin.srcDirs += 'tests/'
}

//compileKotlin2Js.kotlinOptions.outputFile = "${projectDir}/web/js/rosette.js"
//compileTestKotlin2Js.kotlinOptions.outputFile = "${projectDir}/web/js/rosette-test.js"

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
    testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-test-js', version: '1.2.21'
}

[compileKotlin2Js, compileTestKotlin2Js]*.configure {
    kotlinOptions.moduleKind = "commonjs"
}

task populateNodeModules(type: Copy, dependsOn: compileKotlin2Js) {
    from compileKotlin2Js.destinationDir

    configurations.testCompile.each {
        from zipTree(it.absolutePath).matching { include '*.js' }
    }

    into "${buildDir}/node_modules"
}

node {
    download = true
}

task installMocha(type: NpmTask) {
    args = ['install', 'mocha']
}

task runMocha(type: NodeTask, dependsOn: [compileTestKotlin2Js, populateNodeModules, installMocha]) {
    script = file('node_modules/mocha/bin/mocha')
    args = [compileTestKotlin2Js.outputFile]
}

test.dependsOn runMocha

